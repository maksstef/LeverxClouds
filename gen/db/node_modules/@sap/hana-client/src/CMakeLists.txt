INCLUDE(buildtools/Preprocessing)

IF(CLIENT_BUILD_NODE)

IF(DARWIN)
    IF(CPP_ABI STREQUAL "xcode7")
        STRING_APPEND(CMAKE_CXX_FLAGS "-std=c++11 -stdlib=libc++")
    ELSE() # presume newer
        STRING_APPEND(CMAKE_CXX_FLAGS "-std=c++11")
    ENDIF()
    STRING_APPEND(CMAKE_SHARED_LINKER_FLAGS "-Wl,-undefined,dynamic_lookup")
ELSEIF(LINUX)
    STRING_APPEND(CMAKE_CXX_FLAGS "-std=c++11")
ENDIF()

# ------- Node shim DLL generation ----------
# MESSAGE(STATUS "INTERFACES_SRC_PATH=${INTERFACES_SRC_PATH}")
# MESSAGE(STATUS "CMAKE_SOURCE_DIR=${CMAKE_SOURCE_DIR}")

SET(hananode_sources
    hana.cpp
    utils.cpp
    connection.cpp
    resultset.cpp
    statement.cpp
    ${CMAKE_SOURCE_DIR}/Interfaces/dbcapi/DBCAPI_DLL.cpp
)
IF(WINDOWS)
    LIST(APPEND hananode_sources "${CMAKE_SOURCE_DIR}/include/node/win_delay_load_hook.cc" )
ENDIF()

# BUILD_NODE(VERSION <node version> [SQLA])
#  - By default build HANA node driver for version <node version>
#  - Set SQLA to build SQLA version of node driver
FUNCTION(BUILD_NODE)
    SET(options SQLA)
    SET(oneValueArgs VERSION)
    SET(multiValueArgs )
    CMAKE_PARSE_ARGUMENTS(BUILD_NODE "${options}" "${oneValueArgs}" "${multiValueArgs}" ${ARGN})

    IF(NOT BUILD_NODE_VERSION)
        MESSAGE(FATAL_ERROR "Must specify node version when calling BUILD_NODE")
    ENDIF()

    IF(BUILD_NODE_SQLA)
        SET(node_target_prefix "sqla-client")
    ELSE()
        SET(node_target_prefix "hana-client")
    ENDIF()

    IF(BUILD_NODE_VERSION STREQUAL "6")
        SET(node_target ${node_target_prefix})
    ELSE()
        SET(node_target ${node_target_prefix}_v${BUILD_NODE_VERSION})
    ENDIF()

    ADD_HDB_LIBRARY(${node_target}
                    SHARED
                    NO_LIB_PREFIX
                    ALLOW_UNDEFINED_SYMBOLS_AT_LINK_TIME
                    ${hananode_sources})

    IF(BUILD_NODE_SQLA)
        SET(node_compile_definitions
            "_DBCAPI_VERSION=6"
            "DRIVER_NAME=sqla"
            "SQLA"
        )
    ELSE()
        SET(node_compile_definitions
            "_DBCAPI_VERSION=2"
            "DRIVER_NAME=hana"
        )
    ENDIF()

    TARGET_COMPILE_DEFINITIONS(${node_target} PRIVATE ${node_compile_definitions})

    TARGET_INCLUDE_DIRECTORIES(${node_target}
        PUBLIC
            ${NODE${BUILD_NODE_VERSION}_INCLUDE}
            ${CMAKE_SOURCE_DIR}/Interfaces/dbcapi
            "h"
    )

    IF(WINDOWS)
        TARGET_LINK_LIBRARIES(${node_target}
            PUBLIC
                node${BUILD_NODE_VERSION}_implib
        )
    ENDIF()

    IF(LINUX)
        SET_PROPERTY(TARGET ${node_target} APPEND PROPERTY LINK_FLAGS "-Wl,-Bsymbolic")
    ENDIF()

    SET_TARGET_PROPERTIES(${node_target} PROPERTIES SUFFIX ".node")
ENDFUNCTION()

BUILD_NODE(VERSION 4)
# BUILD_NODE(VERSION 4 SQLA)

BUILD_NODE(VERSION 6)
# BUILD_NODE(VERSION 6 SQLA)

BUILD_NODE(VERSION 8)
# BUILD_NODE(VERSION 8 SQLA)

BUILD_NODE(VERSION 10)
# BUILD_NODE(VERSION 10 SQLA)

BUILD_NODE(VERSION 12)
# BUILD_NODE(VERSION 12 SQLA)

ELSEIF(CLIENT_BUILD_NODE_SHIM)
    SET(shim_files
        ${GEN_DIR}/hana-client.node
        ${GEN_DIR}/hana-client_v4.node
        ${GEN_DIR}/hana-client_v8.node
        ${GEN_DIR}/hana-client_v10.node
        ${GEN_DIR}/hana-client_v12.node
    )
    IF(LINUX)
        SET(gcc48_profile ${PLATFORM_NAME}-gcc48-${EXT_LIB_MODE})
        ADD_CUSTOM_COMMAND(OUTPUT ${shim_files}
            COMMAND ${HAPPY_MAKE_EXECUTABLE} init -b ${gcc48_profile}
            COMMAND ${HAPPY_MAKE_EXECUTABLE} b -b ${gcc48_profile} hana-client_v4 hana-client hana-client_v8 hana-client_v10 hana-client_v12
            COMMAND ${CMAKE_COMMAND} -E copy ${INTERFACES_SRC_PATH}/build/${gcc48_profile}/gen/hana-client.node ${GEN_DIR}/hana-client.node
            COMMAND ${CMAKE_COMMAND} -E copy ${INTERFACES_SRC_PATH}/build/${gcc48_profile}/gen/hana-client_v4.node ${GEN_DIR}/hana-client_v4.node
            COMMAND ${CMAKE_COMMAND} -E copy ${INTERFACES_SRC_PATH}/build/${gcc48_profile}/gen/hana-client_v8.node ${GEN_DIR}/hana-client_v8.node
            COMMAND ${CMAKE_COMMAND} -E copy ${INTERFACES_SRC_PATH}/build/${gcc48_profile}/gen/hana-client_v10.node ${GEN_DIR}/hana-client_v10.node
            COMMAND ${CMAKE_COMMAND} -E copy ${INTERFACES_SRC_PATH}/build/${gcc48_profile}/gen/hana-client_v12.node ${GEN_DIR}/hana-client_v12.node
        )
        ADD_CUSTOM_TARGET(node_gcc48ongcc43 DEPENDS ${shim_files})
        ADD_DEPENDENCIES(installer node_gcc48ongcc43)
        ADD_DEPENDENCIES(installer_ccl node_gcc48ongcc43)
    ELSEIF(WINDOWS)
        SET(msvc2015_profile ${PLATFORM_NAME}-msvc2015-${EXT_LIB_MODE})
        ADD_CUSTOM_COMMAND(OUTPUT ${shim_files}
            COMMAND ${HAPPY_MAKE_EXECUTABLE} init -b ${msvc2015_profile}
            COMMAND ${HAPPY_MAKE_EXECUTABLE} b -b ${msvc2015_profile} hana-client_v4 hana-client hana-client_v8 hana-client_v10 hana-client_v12
            COMMAND ${CMAKE_COMMAND} -E copy ${INTERFACES_SRC_PATH}/build/${msvc2015_profile}/gen/hana-client.node ${GEN_DIR}/hana-client.node
            COMMAND ${CMAKE_COMMAND} -E copy ${INTERFACES_SRC_PATH}/build/${msvc2015_profile}/gen/hana-client.pdb ${GEN_DIR}/hana-client.pdb
            COMMAND ${CMAKE_COMMAND} -E copy ${INTERFACES_SRC_PATH}/build/${msvc2015_profile}/gen/hana-client_v4.node ${GEN_DIR}/hana-client_v4.node
            COMMAND ${CMAKE_COMMAND} -E copy ${INTERFACES_SRC_PATH}/build/${msvc2015_profile}/gen/hana-client_v4.pdb ${GEN_DIR}/hana-client_v4.pdb
            COMMAND ${CMAKE_COMMAND} -E copy ${INTERFACES_SRC_PATH}/build/${msvc2015_profile}/gen/hana-client_v8.node ${GEN_DIR}/hana-client_v8.node
            COMMAND ${CMAKE_COMMAND} -E copy ${INTERFACES_SRC_PATH}/build/${msvc2015_profile}/gen/hana-client_v8.pdb ${GEN_DIR}/hana-client_v8.pdb
            COMMAND ${CMAKE_COMMAND} -E copy ${INTERFACES_SRC_PATH}/build/${msvc2015_profile}/gen/hana-client_v10.node ${GEN_DIR}/hana-client_v10.node
            COMMAND ${CMAKE_COMMAND} -E copy ${INTERFACES_SRC_PATH}/build/${msvc2015_profile}/gen/hana-client_v10.pdb ${GEN_DIR}/hana-client_v10.pdb
            COMMAND ${CMAKE_COMMAND} -E copy ${INTERFACES_SRC_PATH}/build/${msvc2015_profile}/gen/hana-client_v12.node ${GEN_DIR}/hana-client_v12.node
            COMMAND ${CMAKE_COMMAND} -E copy ${INTERFACES_SRC_PATH}/build/${msvc2015_profile}/gen/hana-client_v12.pdb ${GEN_DIR}/hana-client_v12.pdb
        )
        ADD_CUSTOM_TARGET(node_msvc2015onmsvc2010 DEPENDS ${shim_files})
        ADD_DEPENDENCIES(installer node_msvc2015onmsvc2010)
        ADD_DEPENDENCIES(installer_ccl node_msvc2015onmsvc2010)
    ENDIF()
ENDIF()
